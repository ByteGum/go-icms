name: Build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -v -o build/go-mlayer-linux-amd64
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 1
          CXX: "x86_64-linux-musl-g++"
      # - name: Test with the Go CLI
      #   run: go test
      - name: Archive binary
        run: |
          tar -czvf go-mlayer.tar.gz build/go-mlayer-linux-amd64
      # - name: Upload Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: ./go-mlayer.tar.gz
      #     asset_name: go-mlayer.tar.gz
      #     asset_content_type: application/gzip

  create_release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./go-mlayer.tar.gz
        asset_name: go-mlayer.tar.gz
        asset_content_type: application/gzip
